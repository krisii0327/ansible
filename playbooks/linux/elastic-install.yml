---
- name: Install Elasticsearch
  hosts: "{{ hosts_var | default('all') }}"
  gather_facts: yes
  become: true
  vars:

  tasks:
    - name: Install GPG-KEY for Elasticsearch
      block:
        - name: Check if GPG key is installed
          stat:
            path: /usr/share/keyrings/elasticsearch-keyring.gpg
          register: gpg_key_status

        - name: Download and install Elastic GPG key if not installed
          ansible.builtin.shell: |
            wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
          when: gpg_key_status.stat.exists == False
    
    - name: Install apt-transport-https package
      ansible.builtin.package:
        name:
          - apt-transport-https
        state: present

    - name: Add Elastic APT repository definition
      lineinfile:
        path: /etc/apt/sources.list.d/elastic-8.x.list
        line: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
        create: yes

    - name: Install Elasticsearch
      block:
        - name: Update package cache
          apt:
            update_cache: yes

        - name: Install Elasticsearch
          ansible.builtin.package:
            name: elasticsearch
            state: present
          register: elastic_output
        
        - name: Extract generated password
          set_fact:
            generated_password: "{{ elastic_output.stdout_lines | select('search', 'The generated password for the elastic built-in superuser is') | list | first | regex_replace('^.*: (.*)', '\\1') }}"
          when: elastic_output.changed
          
        - name: Install Kibana and Logstash
          ansible.builtin.package:
            name:
              - kibana
              - logstash
            state: present

    - name: Change Elasticsearch configuration file
      block:
        - name: Change Elasticsearch configuration file - cluster name
          ansible.builtin.lineinfile:
            path: /etc/elasticsearch/elasticsearch.yml
            regexp: '^.*cluster.name: my-application'
            line: 'cluster.name: CyberRange-Elastic'
            backrefs: yes
            state: present

        - name: Change Elasticsearch configuration file - network host
          ansible.builtin.lineinfile:
            path: /etc/elasticsearch/elasticsearch.yml
            regexp: '^.*network.host: 192.168.0.1'
            line: 'network.host: {{ ansible_default_ipv4.address }}'
            backrefs: yes
            state: present

        - name: Change Elasticsearch configuration file - http port
          ansible.builtin.lineinfile:
            path: /etc/elasticsearch/elasticsearch.yml
            regexp: '^.*#\s*http.port: 9200'
            line: 'http.port: 9200'
            backrefs: yes
            state: present

    - name: Change Kibana configuration file
      block:
        - name: Change Kibana configuration file - server port
          ansible.builtin.lineinfile:
            path: /etc/kibana/kibana.yml
            regexp: '^.*#\s*server.port: 5601'
            line: 'server.port: 5601'
            backrefs: yes
            state: present
          
        - name: Change Kibana configuration file - server host
          ansible.builtin.lineinfile:
            path: /etc/kibana/kibana.yml
            regexp: '^.*server.host: "localhost"'
            line: 'server.host: "{{ ansible_default_ipv4.address }}"'
            backrefs: yes
            state: present

    - name: Start services
      block:
        - name: Start and enable Elasticsearch service
          ansible.builtin.systemd:
            name: elasticsearch
            state: started
            enabled: yes

        - name: Start and enable Kibana service
          ansible.builtin.systemd:
            name: kibana
            state: started
            enabled: yes

    - name: Create enrollment token
      ansible.builtin.command: |
        /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token --scope kibana
      register: elastic_token

    - name: Pause for 120 seconds to wait Kibana verification code
      ansible.builtin.pause:
        seconds: 120

    - name: Create verification code
      ansible.builtin.command: |
        /usr/share/kibana/bin/kibana-verification-code
      register: kibana_verification_code

    - name: Save output to elastic server {{ ansible_default_ipv4.address }}
      ansible.builtin.blockinfile:
        path: /tmp/output.txt
        block: |
          elastic_url: http://{{ ansible_default_ipv4.address }}:5601
          elastic_user: elastic
          elastic_password: {{ generated_password }}
          elastic_token: {{ elastic_token.stdout }}
          kibana_verification_code: {{ kibana_verification_code.stdout }}
        create: yes
